)
# Make sure both maps are on the same color scale
shadeLimit <- 125
# Create the map
fig <- plot_geo(cv_per100, locationmode = 'USA-states') %>%
add_trace(
z = ~newper100k, text = ~hover, locations = ~state,
color = ~newper100k, colors = 'Purples'
)
fig <- fig %>% colorbar(title = paste0("Cases per 100k: ", pick.date), limits = c(0,shadeLimit))
### For specified date
pick.date = "2021-10-15"
# Extract the data for each state by its abbreviation
cv_CFR <- cv_states %>% filter(date=="2021-10-15") %>% select(state, abb, naive_CFR, cases, deaths) # select data
cv_CFR$state_name <- cv_CFR$state
cv_CFR$state <- cv_CFR$abb
cv_CFR$abb <- NULL
# Create hover text
cv_CFR$hover <- with(cv_CFR, paste(state_name, '<br>', "CFR: ", naive_CFR, '<br>', "Cases: ", cases, '<br>', "Deaths: ", deaths))
# Set up mapping details
set_map_details <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
# Make sure both maps are on the same color scale
shadeLimit <- 125
# Create the map
fig <- plot_geo(cv_per100, locationmode = 'USA-states') %>%
add_trace(
z = ~newper100k, text = ~hover, locations = ~state,
color = ~newper100k, colors = 'Purples'
)
fig <- fig %>% colorbar(title = paste0("Cases per 100k: ", pick.date), limits = c(0,shadeLimit))
### For specified date
pick.date = "2021-10-15"
# Extract the data for each state by its abbreviation
cv_CFR <- cv_states %>% filter(date=="2021-10-15") %>% select(state, abb, naive_CFR, cases, deaths) # select data
cv_CFR$state_name <- cv_CFR$state
cv_CFR$state <- cv_CFR$abb
cv_CFR$abb <- NULL
# Create hover text
cv_CFR$hover <- with(cv_CFR, paste(state_name, '<br>', "CFR: ", naive_CFR, '<br>', "Cases: ", cases, '<br>', "Deaths: ", deaths))
# Set up mapping details
set_map_details <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
# Make sure both maps are on the same color scale
shadeLimit <- 125
# Create the map
fig <- plot_geo(cv_per100, locationmode = 'USA-states') %>%
add_trace(
z = ~newper100k, text = ~hover, locations = ~state,
color = ~newper100k, colors = 'Purples'
)
fig <- fig %>% colorbar(title = paste0("Cases per 100k: ", pick.date), limits = c(0,shadeLimit))
### For May 1 2020
# Extract the data for each state by its abbreviation
cv_CFR <- cv_states %>% filter(date=="2020-05-01") %>% select(state, abb, naive_CFR, cases, deaths) # select data
cv_CFR$state_name <- cv_CFR$state
cv_CFR$state <- cv_CFR$abb
cv_CFR$abb <- NULL
# Create hover text
cv_CFR$hover <- with(cv_CFR, paste(state_name, '<br>', "CFR: ", naive_CFR, '<br>', "Cases: ", cases, '<br>', "Deaths: ", deaths))
### For specified date
pick.date = "2021-10-15"
# Extract the data for each state by its abbreviation
cv_CFR <- cv_states %>% filter(date=="2021-10-15") %>% select(state, abb, naive_CFR, cases, deaths) # select data
cv_CFR$state_name <- cv_CFR$state
cv_CFR$state <- cv_CFR$abb
cv_CFR$abb <- NULL
# Create hover text
cv_CFR$hover <- with(cv_CFR, paste(state_name, '<br>', "CFR: ", naive_CFR, '<br>', "Cases: ", cases, '<br>', "Deaths: ", deaths))
# Set up mapping details
set_map_details <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
# Make sure both maps are on the same color scale
shadeLimit <- 125
# Create the map
fig <- plot_geo(cv_per100, locationmode = 'USA-states') %>%
add_trace(
z = ~newper100k, text = ~hover, locations = ~state,
color = ~newper100k, colors = 'Purples'
)
fig <- fig %>% colorbar(title = paste0("Cases per 100k: ", pick.date), limits = c(0,shadeLimit))
### For specified date
pick.date = "2021-10-15"
# Extract the data for each state by its abbreviation
cv_CFR <- cv_states %>% filter(date=="2021-10-15") %>% select(state, abb, naive_CFR, cases, deaths) # select data
cv_CFR$state_name <- cv_CFR$state
cv_CFR$state <- cv_CFR$abb
cv_CFR$abb <- NULL
# Create hover text
cv_CFR$hover <- with(cv_CFR, paste(state_name, '<br>', "CFR: ", naive_CFR, '<br>', "Cases: ", cases, '<br>', "Deaths: ", deaths))
# Set up mapping details
set_map_details <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
# Make sure both maps are on the same color scale
shadeLimit <- 125
# Create the map
fig <- plot_geo(cv_per100, locationmode = 'USA-states') %>%
add_trace(
z = ~newper100k, text = ~hover, locations = ~state,
color = ~newper100k, colors = 'Purples'
)
fig <- fig %>% colorbar(title = paste0("Cases per 100k: ", pick.date), limits = c(0,shadeLimit))
e^((0.15+0*-1.97+0*0.20))
exp((0.15+0*-1.97+0*0.20))
exp(0.15)
exp(0.15-(1*-1.97)+(1*0.20))
0.15 - 1.97 + .20
exp(-1.62)
.20 * 1
exp(0.15)
0.198 - 1.16
0.15-1.97+.20
exp(-1.62)
0.15-1.97
exp(-1.82)
exp(0)
0*.20
0.198-0.162
exp(0.15)
1.161834 / (1 + 1.161834)
exp(0.70)
exp(4.0842)
# Shows
exp(0.52869)
# Rides
exp(-1.07793)
# Shops
exp(-0.09243)
exp(0..619)
exp(0.619)
exp(-0.478)
# Shows
exp(0.52869)
# Rides
exp(-1.07793)
# Shops
exp(-0.09243)
# Shows
exp(0.52869)
# Rides
exp(-1.07793)
# Shops
exp(-0.09243)
# Shows
exp(0.601972)
# Rides
exp(-0.9458484)
# Shops
exp(-0.0501304)
#################### Visuals ####################
# Stroke Barplot
ggplot(data = df, aes(x = stroke)) +
geom_bar()
rexp(1000, 0.2)
rexp(1000)
# Load the psych package, you could also use princomp in the stats package
library(psych)
# Example data
df <- data.frame(x1 = rnorm(100, 0, .5)
, x2 = rnorm(100, 0, 1)
, x3 = rnorm(100, .02, 1)
)
# run the PCA
PCA_results <- principal(df, nfactors = 1)
# add our PCA scores as an index
df$index <- PCA_results$scores
# Load the psych package, you could also use princomp in the stats package
library(psych)
# Example data
df <- data.frame(x1 = rnorm(100, 0, .5)
, x2 = rnorm(100, 0, 1)
, x3 = rnorm(100, .02, 1)
)
# run the PCA
PCA_results <- principal(df, nfactors = 1)
# add our PCA scores as an index
df$index <- PCA_results$scores
View(df)
# Load the psych package, you could also use princomp in the stats package
library(psych)
# Example data
df <- data.frame(x1 = rnorm(100, 0, .5)
, x2 = rnorm(100, 0, 1)
, x3 = rnorm(100, .02, 1)
)
# run the PCA
PCA_results <- principal(df, nfactors = 2)
# add our PCA scores as an index
df$index <- PCA_results$scores
View(df)
PCA_results$values
scale(df$index)
mean(df$index)
sd(df$index)
as.numeric(scale(df$index))
mean(as.numeric(scale(df$index)))
sd(as.numeric(scale(df$index)))
max(df$index)
# Standardize
df <-
df %>%
mutate(s = (index - min(index)) / (max(index) - min(index)) * 100)
library(tidyverse)
# Standardize
df <-
df %>%
mutate(s = (index - min(index)) / (max(index) - min(index)) * 100)
df <-
df %>%
mutate(zscore = scale(index))
# Libraries
library(tidyverse)
library(titanic)
install.packages("titanic")
library(titanic)
setwd("C:/Users/Eugen/Desktop/PM616 - Assignment 1")
install.packages("keras")
keras::install_keras("conda")
Y
knitr::opts_chunk$set(echo = TRUE)
# set working directory
setwd("C:/Users/Eugen/Desktop/PM616 - Assignment 1")
# libraries
library(tidyverse)
library(keras)
train <- read_csv('train.csv')
test <- read_csv('test')
train <- read_csv('train.csv')
test <- read_csv('test.csv')
train %>% select(-PassengerId) %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram()
ggplot(titanic.data)+
geom_density(aes(Age, color=as.factor(Survived)),size=1)
ggplot(train)+
geom_density(aes(Age, color=as.factor(Survived)),size=1)
train %>% select(-PassengerId) %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram()
ggplot(titanic.data)+
geom_boxplot(aes(log(Fare), color=as.factor(Survived)),size=1)+
labs(y=NULL)
ggplot(train)+
geom_boxplot(aes(log(Fare), color=as.factor(Survived)),size=1)+
labs(y=NULL)
ggplot(train)+
geom_boxplot(aes(Fare, color=as.factor(Survived)),size=1)+
labs(y=NULL)
ggplot(train)+
geom_boxplot(aes(log(Fare), color=as.factor(Survived)),size=1)+
labs(y=NULL)
View(train)
ggplot(train, aes(x = Age, fill = Survived)) +
geom_histogram
ggplot(train, aes(x = Age, fill = Survived)) +
geom_histogram()
ggplot(train, aes(x = Age, fill = factor(Survived))) +
geom_histogram()
ggplot(train, aes(x = Age, fill = factor(Survived)), colour = factor(Survived))) +
ggplot(train, aes(x = Age, fill = factor(Survived), colour = factor(Survived)) +
geom_histogram()
ggplot(train, aes(x = Age, fill = factor(Survived), colour = factor(Survived))) +
geom_histogram()
ggplot(train, aes(x = Age, fill = factor(Survived), colour = factor(Survived))) +
geom_histogram(alpha = 0.5, position = "identity")
ggplot(train, aes(x = Age, fill = factor(Survived), colour = factor(Survived))) +
geom_histogram(alpha = 0.5, position = "dodge")
ggplot(train, aes(x = Age, fill = factor(Survived), colour = factor(Survived))) +
geom_histogram(alpha = 0.5, position = "identity")
ggplot(data = train, aes(log(Fare), color=as.factor(Survived)),size=1)+
geom_boxplot()
ggplot(data = train, aes(log(Fare), color = factor(Survived)), size=1)+
geom_boxplot()
View(train)
table(train$Embarked)
ggplot(data = train, aes(log(Fare), color = factor(Survived)))+
geom_boxplot()
ggplot(data = train, aes(x = embarked)) +
geom_bar()
ggplot(data = train, aes(x = Embarked)) +
geom_bar()
ggplot(data = train, aes(x = Embarked), fill = Embarked) +
geom_bar()
ggplot(data = train, aes(x = Embarked), fill = factor(Embarked)) +
geom_bar()
ggplot(data = train, aes(x = factor(Embarked)), fill = factor(Embarked)) +
geom_bar()
ggplot(data = train, aes(x = factor(Embarked)), fill = factor(Embarked)) +
geom_bar() +
scale_fill_hue(c = 40)
ggplot(data = train, aes(x = as.factor(Embarked)), fill = as.factor(Embarked)) +
geom_bar() +
scale_fill_hue(c = 40)
ggplot(data = train, aes(x = factor(Embarked)), fill = factor(Embarked)) +
geom_bar() +
scale_fill_hue(c = 40)
ggplot(data = train, aes(x = factor(Embarked)), fill = factor(Embarked)) +
geom_bar() +
scale_fill_hue(c = 40) +
theme(legend.position="none")
ggplot(data = train, aes(x = factor(Embarked)), fill = factor(Embarked)) +
geom_bar()
ggplot(data = train, aes(x = factor(Embarked)), fill = factor(Embarked)) +
geom_bar(stat = "identity")
ggplot(data = train, aes(x = factor(Embarked)), fill = factor(Embarked)) +
geom_bar()
ggplot(data = train, aes(x = factor(Embarked))) +
geom_bar( )
ggplot(data = train, aes(x = Embarked)) +
geom_bar( )
ggplot(data = train, aes(x = Embarked)) +
geom_bar(stat = "count")
ggplot(data = train, aes(x = Embarked)) +
geom_bar()
ggplot(data = train, aes(x = Embarked, fill = Survived)) +
geom_bar(stat = "count")
ggplot(train ,aes(x = Embarked, y = x, fill = Survived)) +
geom_bar(stat = "identity", position = "dodge")
ggplot(train ,aes(x = Embarked, fill = Survived)) +
geom_bar(stat = "count", position = "dodge")
ggplot(train, aes(x = Embarked)) +
geom_bar()
table(train$Embarked, train$Survived)
ggplot(data = train, aes(Embarked, ..count..))
ggplot(data = train, aes(factor(Embarked), ..count..))
ggplot(data = train, aes(factor(Embarked), ..count..))
ggplot(data = train, aes(factor(Embarked), ..count..))
ggplot(data = train, aes(Embarked, ..count..)) +
geom_bar()
ggplot(data = train, aes(Embarked, ..count.., fill = Survived)) +
geom_bar()
ggplot(data = train, aes(Embarked, ..count..)) +
geom_bar(aes(fill = Survived))
ggplot(data = train, aes(!is.na(Embarked), ..count..)) +
geom_bar(aes(fill = Survived))
train %>%
drop_na(train) %>%
ggplot(data = train, aes(Embarked, ..count..)) +
geom_bar(aes(fill = Survived))
train %>%
drop_na(train) %>%
ggplot(data = train, aes(Embarked, ..count..)) +
geom_bar(aes(fill = Survived), position = "dodge")
train %>%
drop_na(train) %>%
ggplot(data = train, aes(factor(Embarked), ..count..)) +
geom_bar(aes(fill = factor(Survived)), position = "dodge")
train %>%
drop_na(train) %>%
ggplot(data = train, aes(factor(Embarked), ..count..)) +
geom_bar(aes(fill = factor(Survived)), position = "dodge")
train %>%
drop_na(train) %>%
ggplot(data = train, aes(Embarked, ..count..)) +
geom_bar(aes(fill = Survived), position = "dodge")
train %>%
drop_na(train) %>%
ggplot(data = train, aes(Embarked, ..count..)) +
geom_bar(aes(fill = Survived), position = "dodge")
train %>%
drop_na(train) %>%
ggplot(data = train, aes(Embarked, ..count..)) +
geom_bar(aes(fill = Survived), position = "dodge")
train %>%
drop_na(train) %>%
ggplot(data = train, aes(Embarked, ..count..)) +
geom_bar(aes(fill = Survived), position = "dodge")
train %>%
drop_na(train) %>%
ggplot(data = train, aes(Embarked, ..count..)) +
geom_bar(aes(fill = Survived), position = "dodge")
train %>%
drop_na(train) %>%
ggplot(data = train, aes(Embarked, ..count..)) +
geom_bar(aes(fill = Survived), position = "dodge")
train %>%
drop_na(train) %>%
ggplot(data = train, aes(Embarked, ..count..)) +
geom_bar(aes(fill = Survived), position = "dodge")
train %>%
drop_na(train) %>%
ggplot(data = train, aes(Embarked, ..count..)) +
geom_bar(aes(fill = Survived), position = "dodge")
train %>%
drop_na(train) %>%
ggplot(data = train, aes(Embarked, ..count..)) +
geom_bar(aes(fill = Survived), position = "dodge")
train %>%
drop_na(train) %>%
ggplot(data = train, aes(Embarked, ..count..)) +
geom_bar(aes(fill = Survived), position = "dodge")
train %>%
drop_na(train) %>%
ggplot(data = train, aes(Embarked, ..count..)) +
geom_bar(aes(fill = Survived), position = "dodge")
train %>%
group_by(Embarked, Survived) %>%
tally()
train2 <-
train %>%
group_by(Embarked, Survived) %>%
tally()
View(train2)
names(train2)
train2 <-
train %>%
group_by(Embarked, Survived) %>%
tally()
ggplot(df2, aes(x = Embarked, y = n, fill = Survived)) +
geom_bar(stat = 'identity', position = 'dodge')
train2 <-
train %>%
group_by(Embarked, Survived) %>%
tally()
ggplot(train2, aes(x = Embarked, y = n, fill = Survived)) +
geom_bar(stat = 'identity', position = 'dodge')
train2 <-
train %>%
group_by(Embarked, Survived) %>%
tally()
ggplot(train2, aes(x = Embarked, y = n, fill = factor(Survived))) +
geom_bar(stat = 'identity', position = 'dodge')
train %>%
drop_na(train)
View(train2)
train2 <-
drop_na(train2
View(train2)
View(train2)
train2 <-
drop_na(train2)
View(train2)
train2 <-
train %>%
group_by(Embarked, Survived) %>%
tally() %>%
drop_na(train2)
train2 <-
train %>%
group_by(Embarked, Survived) %>%
tally()
train2 <-
drop_na(train2)
ggplot(train2, aes(x = Embarked, y = n, fill = factor(Survived))) +
geom_bar(stat = 'identity', position = 'dodge')
train %>% select(-PassengerId) %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram()
View(train)
View(train)
train3 <-
train %>%
group_by(Gender, Survived) %>%
tally()
train3 <-
train %>%
group_by(Sex, Survived) %>%
tally()
train3 <-
drop_na(train3)
ggplot(train2, aes(x = Sex, y = n, fill = factor(Survived))) +
geom_bar(stat = 'identity', position = 'dodge')
train3 <-
train %>%
group_by(Sex, Survived) %>%
tally()
train3 <-
drop_na(train3)
ggplot(train3, aes(x = Sex, y = n, fill = factor(Survived))) +
geom_bar(stat = 'identity', position = 'dodge')
table(train$Sex)
table(train$Embarked)
# sex
train$sex <- ifelse(train$sex == 'male', 1, 0)
View(train)
train$sex <- ifelse(train$sex == 'male', 1, 0)
# sex
train$Sex <- ifelse(train$Sex == 'male', 1, 0)
# Embarked
train$Embarked_C <- ifelse(train$Embarked == 'C', 1, 0)
train$Embarked_Q <- ifelse(train$Embarked == 'Q', 1, 0)
train$Embarked_S <- ifelse(train$Embarked == 'S', 1, 0)
# remove variables
train <-
train %>%
select(-c(PassengerId, Name, Ticket, Cabin, Embarked))
View(train)
